#under edit
name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
env: 
  REPOENV: REPOENV



# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    runs-on: ubuntu-latest
   
 

    steps:
      - uses: actions/checkout@v2
      - name: Run a multi-line script
      
        
        
        
        env: 
          REP: 123
       
        run: |
          source option 
          echo "RIPP=${REPO}" >> $GITHUB_ENV
          #echo "::set-env name=REP::$REPO"
          echo $RIPP
          
          echo ${{ secrets.ghtoken }} > token.txt
          gh auth login --with-token < token.txt
          git remote rm origin 
          gh repo create $GHACCOUNT/$REPO  --template=$TEMPLATE --confirm --$ACCESS
          echo repo is created 
          git remote rm origin 
          git config --global user.name "aliomom"
          git config --global user.email "a.omom11115@gmail.com"
          echo git config is done 
          
        
          sleep 15
          git clone  https://github.com/$GHACCOUNT/$REPO.git
          cd $REPO
          sed -i "s/ske/$REPO/g" web.yaml
          sed -i "s/ske/$REPO/g" mysql.yaml
          sed -i "s/ske/$REPO/g" namespace.yaml
          echo string replace is done 
          git commit -a -m "iit"
          git remote -v
          git remote rm origin 
          #git remote set-url origin git@github.com:@GHACCOUNT/$REPO.git
          git remote add origin https://aliomom:${{ secrets.ghtoken }}@github.com/aliomom/$REPO.git

          git push --set-upstream origin main
      - uses: actions/checkout@v2
        with:
         repository: yes-soft-de/environment-tools
         token: ${{ secrets.ENVGHTOKEN }}
      - run: |
         echo the repo is 
         echo ${RIPP}
       

         mkdir -p ${RIPP} && cd ${RIPP}
         ls -al
         echo  ${{ secrets.ENV }} > .env
         echo  ${{ secrets.HTACCESS }} > .htaccess
         mkdir jwt && cd jwt
         openssl genpkey -out private.pem -aes256 -pass pass:${{ secrets.PASS }} -algorithm rsa -pkeyopt rsa_keygen_bits:4096 
         openssl pkey -passin pass:${{ secrets.PASS }} -in private.pem -out public.pem -pubout
         ls -al 
         cd .. && ls -al
         git add .
         git commit -a -m "add .env and .htacces and jwt"
         

          
         
         git push 
         
